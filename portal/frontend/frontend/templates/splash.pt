<html metal:use-macro="load: portal_main.pt">

<div metal:fill-slot="additional-css">
  <!-- Launch Google Signin procedures, use defer  -->
  <script type="text/javascript" src="${static_url}bootstrap-switch/js/bootstrap-switch.min.js"></script>
  <link rel="stylesheet" type="text/css" href="${static_url}bootstrap-switch/css/bootstrap3/bootstrap-switch.min.css" />
  <link rel="stylesheet" type="text/css" href="${static_url}css/splash.css" />

</div>

<div metal:fill-slot="additional-buttons">
  <!-- <input data-size="large" id="edit_button" type="checkbox" value="1" /> -->
  <button id="settingsButton" class="nav_button"><i class="fa fa-cog"></i>&nbsp;&nbsp;Settings</button>  
</div>

<div metal:fill-slot="dialogs">
      <div id="settings_dialog" style="display:none;">      
       <form id="icon_size_form">
        <br /><strong>Button Size:</strong><br />
        <input type="radio" name="icon_size" id="larger_icons" value="+1" ${'checked' if (settings and settings.icon_size == '+1') or not settings else ""} />
        <label for="larger_icons">Larger Icons</label><br />

        <input type="radio" name="icon_size" id="smaller_icons" value="-1" ${'checked' if settings and settings.icon_size == '-1' else ""} />
        <label for="smaller_icons">Smaller Icons</label>
       </form>
       <form id="new_tab_form">
        <br /><strong>On Click:</strong><br />
        <input id="new_tab_checkbox" type="checkbox" name="new_tab" ${'value="1" checked="checked"' if settings and settings.new_tab else 'value="0"'}  />
        <label for="new_tab_checkbox">Open in a new tab</label>
       </form>
    </div>
</div>


    <div metal:fill-slot="content">

      <script>

        $("#edit_button").bootstrapSwitch({
          onText: 'On',
          offText: '',
          labelWidth: 80,
          labelText: '<i class="fa fa-edit"></i>&nbsp;Edit Mode',
          onColor: 'success',
          size: 'mini', 
          inverse: true,
          onSwitchChange: function (event, state) {
            $containers = $('.splash_button_container');
            console.log($containers);

            if (state) {  // edit mode on

                // disable jboxes
              $.each(jbox_array, function (index, value) {
                value.disable();
              });

              // enable drag'n'drop
              $.each($containers, function (index, value) {
                var $buttons = $(value).find('.splash_button_item');
                  $(value).packery('bindUIDraggableEvents', $buttons);
                $buttons.draggable('enable');
                $buttons.find('.splash_button > a').css('cursor', 'move');  // specificity gets rid of a:-webkit-any-link definition
                $splash_button_texts = $buttons.find('.splash_button_text');
                $splash_button_texts.css('cursor', 'text');
                $splash_button_texts.addClass('editable');
              });
            } else {      // edit mode off
              // jboxes enabled
              $.each(jbox_array, function (index, value) {
                value.enable();
              });

              $.each($containers, function (index, value) {
                var $buttons = $(value).find('.splash_button_item');
                $buttons.draggable('disable');
                $buttons.find('.splash_button > a').css('cursor', 'pointer');
                $splash_button_texts = $buttons.find('.splash_button_text');
                $splash_button_texts.removeClass('editable');
                $splash_button_texts.css('cursor', 'pointer');
              });


            }

          }
        });

        var jbox_array = [];

        function do_settings_dialog() {

          $('#settingsButton').on('click', function () {

            jbox_array.forEach(function (item, index) { 
              //console.log(jbox_array[index]);
              //FIXME this doesn't actually work
              jbox_array[index].disable();
            });

            $('#settings_dialog').dialog({
              dialogClass: "no-close",
              resizeable: false,
              hide: "fold",
              show: "fold",
              model: true,
              title: "Settings",
              height: 250,
              width: 400,
              close: false,
              buttons: {
                "Done": function () { 
                  $(this).dialog('close');
                  //FIXME: check for disabled first?
                  jbox_array.forEach(function (item, index) {
                    jbox_array[index].enable();
                  });
                }
              }
            });


          });
        }

        function do_update() {
          // FIXME: 
          // userText = $('#userButton').html();
          // if (userText.indexOf('add_name_here') != -1) {
          //   $.ajax({
          //     type:'POST',
          //     url: 'user_data',
          //     contentType: 'application/json; charset=utf-8',
          //     success: function(result) {
          //         console.log(result);
          //         userText.replace('add_name_here', result['data']);
          //         console.log(userText);
          //         $("#userButton").replaceWith(userText);
          //       }
          //   });
          // }
          console.log("Updating");

          var value = $("#new_tab_checkbox").val();
          if (value == "1") {
            $('a').each(function(index, element) {
              $(this).attr('target', '_blank_'+index);
            });
          }


          $.ajax({
            type:'POST',
            url: 'mb_homeroom',
            contentType: 'application/json; charset=utf-8',
            success: function(result) {
              if (result.hasOwnProperty('data') && result.data.length > 0) {
                var link_list = '<li><hr /></li><li class="button_sub_heading"><i class="fa fa-fw"></i><i class="fa fa-fw"></i>Email teachers of:</li>';
                for (i=0; i < result.data.length; i++) {
                  link_list += '<li><a href="mailto:' + result.data[i].student_email + '"><i class="fa fa-envelope"></i>&nbsp;' + result.data[i].student_name + '</a></li>';
                }
                $('#mb_homeroom').parent().replaceWith(link_list);
              }
            }
          });

          $.ajax({
            type:'POST',
            url: 'mb_grade_teachers',
            contentType: 'application/json; charset=utf-8',
            success: function(result) {
              if (result.hasOwnProperty('data') && result.data.length > 0) {
                var link_list = '<li><hr /></li><li class="button_sub_heading"><i class="fa fa-fw"></i><i class="fa fa-fw"></i>Email teachers of:</li>';
                for (i=0; i < result.data.length; i++) {
                  link_list += '<li><a href="mailto:' + result.data[i].teacher_emails + '"><i class="fa fa-envelope"></i>&nbsp; Grade ' + result.data[i].grade + '</a></li>';
                }
              }
              $('#mb_grade_teachers').parent().replaceWith(link_list);
            }
          });

          $.ajax({
            type:'POST',
            url: 'mb_courses',
            contentType: 'application/json; charset=utf-8',
            success: function(result) {
              if (result.hasOwnProperty('data') && result.data.length > 0) {
                var link_list = '<li><hr /></li><li class="button_sub_heading"><i class="fa fa-fw"></i><i class="fa fa-fw"></i>Your courses:</li>';
                for (i=0; i < result.data.length; i++) {
                  if (result.data[i].shortname != null) {
                    link_list += '<li><a href="' + result.data[i].link + '" title="' + result.data[i].name + '"><i class="fa fa-chevron-circle-right fa-fw"></i>&nbsp;' + result.data[i].shortname + '</a></li>';
                  }
                }
                $('#mb_classes').parent().replaceWith(link_list);
              }
            }
          });

        }
      </script>

      <div id="tabs_holder">
        <ul id="tabs_titlebar">
        <li tal:repeat="key buttons"><a href="#${key}">${key.replace('+', ' ')}</a></li>
       </ul>

       <tal:block tal:define="global counter 0" tal:repeat="key buttons">
        <div id="${key}">
          <tal:block tal:define="items buttons[key]" tal:repeat="button items">
            <div tal:define="global counter counter+1"  id="jbox_button_${counter}" class="splash_button ${'smaller' if settings and settings.icon_size == '-1' else ''}">
              <a href="${button.url}">
                  <div><i class="fa fa-${button.icon} fa-5x"></i></div>
                  ${button.name}
              </a>
            </div>
          </tal:block>
        </div> 
       </tal:block>
      </div><!-- /.tabs_holder -->

  <script tal:condition="not unique">
    do_settings_dialog();
    do_update();
    $('#button_list').attr('style', 'display:block;');
  </script>


  <script type="text/javascript">
    $('#tabs_holder').tabs();
    console.log("don");
  </script>

  <script type="text/javascript">
  $("input[name=icon_size]:radio").change(function () {
        var value = $(this).val();

        if ( value == '+1' ) {
        
          $(".splash_button").toggleClass('smaller');        

        } else if ( value == '-1' ) {

          $(".splash_button").toggleClass('smaller');

        }

        $.ajax({
          type:'POST',
          url: 'user_settings',
          contentType: 'application/json; charset=utf-8',
          success: function(result) {
              console.log(result);
            },
          data: JSON.stringify({'icon_size':value})
        });
      });

  $("#new_tab_checkbox").change(function () {
        var value = $(this).val();
        console.log(value);
        value = value == "1" ? "0" : "1";
        $(this).val(value);

        if (value == "1") {
          $('a').each(function(index) {
            $(this).attr('target', '_blank_'+index);
          });
          console.log('added target');
        } else {
          $('a').removeAttr('target');
          console.log('removed target');
        }

        $.ajax({
          type:'POST',
          url: 'user_settings',
          contentType: 'application/json; charset=utf-8',
          success: function(result) {
              console.log(result);
            },
          data: JSON.stringify({'new_tab': value})
        });
  });
  </script>

  <script src="http://code.jboxcdn.com/0.3.2/jBox.min.js"></script>

  <!-- 
  <script type="text/javascript">    
      new jBox('Notice', {
          content: 'New: Google login, and more features!',
          color: 'blue'
      });
  </script>
  -->


  <tal:block tal:repeat="key buttons" tal:condition="buttons">
    <tal:block tal:define="global another_counter 0" tal:repeat="button buttons[key]">
    <tal:block tal:define="global another_counter another_counter+1">
    <tal:block tal:condition="button.context_menu">

      <ul style="display:none" id="submenus_for_${another_counter}">
        <li tal:repeat="menu_item button.context_menu.get('items')">
          <tal:block tal:condition="menu_item.url">
            <a href="${menu_item.url}"><i class="fa fa-${menu_item.icon} fa-fw"></i>&nbsp;${menu_item.display}</a>
          </tal:block>
          <tal:block tal:condition="menu_item.url is False">
            <div id="${menu_item.name}"><hr /></div>
          </tal:block>
          <tal:block tal:condition="menu_item.url is None">
            <hr />
          </tal:block>
        </li>
      </ul>

      <script type="text/javascript">

      var jbox = $('#jbox_button_${another_counter}').jBox('Tooltip', {
          position: {
              y: 'top',
          },
          outside: 'x',
          title: '<a href="${button.url}"><i class="fa fa-${button.icon} fa-fw"></i>&nbsp;${button.name}</a>',
          closeOnMouseleave:true,
          content: $('#submenus_for_${another_counter}')
      });

      jbox_array.push(jbox);

      </script>

    </tal:block>
    </tal:block>
    </tal:block>
  </tal:block>

    <script>
    function signInCallback(authResult) {
      delete authResult['g-oauth-window'];  // it took me forever to find this
      //http://stackoverflow.com/questions/25065194/google-sign-in-uncaught-securityerror
      // It's started happening when I serialized the entire authResult object, could just send what I need...

      console.log(authResult); 
    
      if (authResult['code']) {

        // Hide the sign-in button now that the user is authorized, for example:
        
        $('#signinButton').fadeOut("slow", function () {
            do_settings_dialog();
            $('#button_list').fadeIn("slow");
          });

        $.ajax({
          type: 'POST',
          url: 'signinCallback?' + '${unique}',
          contentType: 'application/json; charset=utf-8',
          success: function(result) {
              window.location.reload();   // refresh
              //do_update();
            },
          data: JSON.stringify({'authResult':authResult, 'code':authResult['code']})
          });
      } else if (authResult['error']) {
        // There was an error.
        // Possible error codes:
        //   "access_denied" - User denied access to your app
        //   "immediate_failed" - Could not automatially log in the user
        console.log('There was an error: ' + authResult['error']);
        // do this just in case we have the user anyway
        do_update();
      }
    }


    
    </script>
    </div>

</html>

